source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
library(caret)
library(rpart)
library(broom)
library(rpart)
library(randomForest)
# bring in data and inspect data
#make category (factors)
df <- read_csv("C:/Users/Admin/EDA-Project/data/sKor_data_tot_v02.csv")
df <- df %>% mutate(across(starts_with("cat"), as.factor))
summary(df)
#seed split(train-test 70:30)
#
#train: 70 train: 30 validation
set.seed(100)
train <- sample(nrow(df), 0.7*nrow(df), replace = FALSE)
training_set<- df[train,]
testing_set <- df[-train,]
train_rf <- sample(nrow(df), 0.1*nrow(df), replace = FALSE)
train_rf_set <- df[train_rf,]
#basic Random Forest train and fit
RFM <- randomForest(num_tot_energy_heat~., data=training_set)
predictions <- predict(RFM,training_set, type = 'response')
#evaluations of predictions
train_predictions <- training_set%>%
transmute(
actual = num_tot_energy_heat,
predicted = predictions
)
rmse <- function(actual, predicted){
mse <- mean((actual - predicted) ** 2)
return(sqrt(mse))
}
predictions <- train_predictions %>% mutate(rmse=rmse(actual,predicted), difference = actual-predicted)
#hyper parameters: ntree and mtry(number of features to do), add importance = TRUE
#cross validation with validation data
#ensure you discuss that random forest isnnot intutative.
library(e1071)
#k-fold cross validatio
trcontrol <- trainControl(method = "cv", number = 10,search="grid")
set.seed(100)
rf_default <- train(num_tot_energy_heat~.,
data = train_rf_set,
method = "ranger",
metric = "RMSE",
trcontrol = trcontrol
)
